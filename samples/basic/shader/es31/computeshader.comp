#version 310 es                                  
uniform float radius;

struct Vector3f
{
	float x;
	float y;
	float z;
	float w;
};

struct AttribData
{
	Vector3f v;
	Vector3f c;
};

layout(std140, binding = 0) buffer destBuffer
{
	AttribData data[];
} outBuffer;

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

void main()                                      
{
	ivec2 storePos = ivec2(gl_GlobalInvocationID.xy);
	uint gWidth = gl_WorkGroupSize.x * gl_NumWorkGroups.x;
	uint gHeight = gl_WorkGroupSize.y * gl_NumWorkGroups.y;
	uint gSize = gWidth * gHeight;
	int offset = storePos.y * int(gWidth) + storePos.x;
	float alpha = 2.0 * 3.14159265359 * (float(offset)/float(gSize));
	outBuffer.data[offset].v.x = sin(alpha) * radius;
	outBuffer.data[offset].v.y = cos(alpha) * radius;
	outBuffer.data[offset].v.z = 0.0;
	outBuffer.data[offset].v.w = 1.0;
	outBuffer.data[offset].c.x = float(storePos.x) / float(gWidth);
	outBuffer.data[offset].c.y = 0.0;
	outBuffer.data[offset].c.z = 1.0;
	outBuffer.data[offset].c.w = 1.0;
}
